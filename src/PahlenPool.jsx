/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/PahlenPool.gltf
*/

import React from "react";
import { useGLTF } from "@react-three/drei";
import { useTexture } from "@react-three/drei";
import { useCustomization } from "./Context/Customization";
import * as THREE from "three";

const PahlenPool = (props) => {
  const { nodes, materials } = useGLTF("/models/PahlenPool.gltf");
  const { poolSize, poolColor, groundColor, stairType } = useCustomization();

  const GroundColor_1 = useTexture({
    map: "/textures/GroundColor_1/Substance_Graph_BaseColor.jpg",
    normalMap: "/textures/GroundColor_1/Substance_Graph_Normal.jpg",
    roughnessMap: "/textures/GroundColor_1/Substance_Graph_Roughness.jpg",
    aoMap: "/textures/GroundColor_1/Substance_Graph_AmbientOcclusion.jpg",
  });

  GroundColor_1.map.repeat.set(4, 4);
  GroundColor_1.map.wrapS = GroundColor_1.map.wrapT = THREE.RepeatWrapping;
  GroundColor_1.normalMap.repeat.set(4, 4);
  GroundColor_1.normalMap.wrapS = GroundColor_1.normalMap.wrapT =
    THREE.RepeatWrapping;
  GroundColor_1.roughnessMap.repeat.set(4, 4);
  GroundColor_1.roughnessMap.wrapS = GroundColor_1.roughnessMap.wrapT =
    THREE.RepeatWrapping;
  GroundColor_1.aoMap.repeat.set(4, 4);
  GroundColor_1.aoMap.wrapS = GroundColor_1.aoMap.wrapT = THREE.RepeatWrapping;
  GroundColor_1.side = THREE.DoubleSide;

  const GroundColor_2 = useTexture({
    map: "/textures/GroundColor_2/Stone_Floor_006_basecolor.jpg",
    normalMap: "/textures/GroundColor_2/Stone_Floor_006_normal.jpg",
    roughnessMap: "/textures/GroundColor_2/Stone_Floor_006_roughness.jpg",
    aoMap: "/textures/GroundColor_2/Stone_Floor_006_ambientOcclusion.jpg",
  });

  GroundColor_2.map.repeat.set(4, 4);
  GroundColor_2.map.wrapS = GroundColor_2.map.wrapT = THREE.RepeatWrapping;
  GroundColor_2.normalMap.repeat.set(4, 4);
  GroundColor_2.normalMap.wrapS = GroundColor_2.normalMap.wrapT =
    THREE.RepeatWrapping;
  GroundColor_2.roughnessMap.repeat.set(4, 4);
  GroundColor_2.roughnessMap.wrapS = GroundColor_2.roughnessMap.wrapT =
    THREE.RepeatWrapping;
  GroundColor_2.aoMap.repeat.set(4, 4);
  GroundColor_2.aoMap.wrapS = GroundColor_2.aoMap.wrapT = THREE.RepeatWrapping;
  GroundColor_2.side = THREE.DoubleSide;

  const PoolColor_1 = useTexture({
    map: "/textures/PoolColor_1/Marble_White_007_basecolor.jpg",
    normalMap: "/textures/PoolColor_1/Marble_White_007_normal.jpg",
    roughnessMap: "/textures/PoolColor_1/Marble_White_007_roughness.jpg",
    aoMap: "/textures/PoolColor_1/Marble_White_007_ambientOcclusion.jpg",
  });

  PoolColor_1.map.repeat.set(4, 4);
  PoolColor_1.map.wrapS = PoolColor_1.map.wrapT = THREE.RepeatWrapping;
  PoolColor_1.normalMap.repeat.set(4, 4);
  PoolColor_1.normalMap.wrapS = PoolColor_1.normalMap.wrapT =
    THREE.RepeatWrapping;
  PoolColor_1.roughnessMap.repeat.set(4, 4);
  PoolColor_1.roughnessMap.wrapS = PoolColor_1.roughnessMap.wrapT =
    THREE.RepeatWrapping;
  PoolColor_1.aoMap.repeat.set(4, 4);
  PoolColor_1.aoMap.wrapS = PoolColor_1.aoMap.wrapT = THREE.RepeatWrapping;
  PoolColor_1.side = THREE.DoubleSide;

  const PoolColor_2 = useTexture({
    map: "/textures/PoolColor_2/Lapis_Lazuli_002_basecolor.jpg",
    normalMap: "/textures/PoolColor_2/Lapis_Lazuli_002_normal.jpg",
    roughnessMap: "/textures/PoolColor_2/Lapis_Lazuli_002_roughness.jpg",
    aoMap: "/textures/PoolColor_2/Lapis_Lazuli_002_ambientOcclusion.jpg",
  });

  PoolColor_2.map.repeat.set(4, 4);
  PoolColor_2.map.wrapS = PoolColor_2.map.wrapT = THREE.RepeatWrapping;
  PoolColor_2.normalMap.repeat.set(4, 4);
  PoolColor_2.normalMap.wrapS = PoolColor_2.normalMap.wrapT =
    THREE.RepeatWrapping;
  PoolColor_2.roughnessMap.repeat.set(4, 4);
  PoolColor_2.roughnessMap.wrapS = PoolColor_2.roughnessMap.wrapT =
    THREE.RepeatWrapping;
  PoolColor_2.aoMap.repeat.set(4, 4);
  PoolColor_2.aoMap.wrapS = PoolColor_2.aoMap.wrapT = THREE.RepeatWrapping;
  PoolColor_2.side = THREE.DoubleSide;

  return (
    <group {...props} dispose={null}>
      <group name="pool4x6" visible={poolSize === 1}>
        <mesh
          geometry={nodes.pool_big_stairs_4x6.geometry}
          position={[0, -0.48, -1.34]}
          visible={stairType === 1}
        >
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh
          geometry={nodes.pool_corner_stairs_4x6.geometry}
          position={[-0.42, -0.48, -1.76]}
          rotation={[0, Math.PI / 4, 0]}
          visible={stairType === 2}
        >
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh
          geometry={nodes.pool_body_4X6.geometry}
          scale={[0.999, 0.999, 0.999]}
        >
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh geometry={nodes.pool_edge_tile_4X6.geometry}>
          <meshStandardMaterial
            {...(groundColor === "GroundColor_1"
              ? GroundColor_1
              : GroundColor_2)}
          />
        </mesh>

        <group position={[-1.46, 0.8, -1.84]}>
          <mesh
            geometry={nodes.Cube003.geometry}
            material={materials.spotlight}
          />
          <mesh
            geometry={nodes.Cube003_1.geometry}
            material={materials["Stainless steel"]}
          />
        </group>
      </group>

      <group name="pool5x8" visible={poolSize === 2}>
        <mesh
          geometry={nodes.pool_big_stairs_5x8.geometry}
          position={[0, -0.48, -1.79]}
          scale={[1.33, 1, 1.33]}
          visible={stairType === 1}
        >
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh
          geometry={nodes.pool_corner_stairs_5x8.geometry}
          position={[-0.56, -0.48, -2.35]}
          rotation={[0, Math.PI / 4, 0]}
          scale={[1.33, 1, 1.33]}
          visible={stairType === 2}
        >
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh geometry={nodes.pool_body_5x8.geometry} scale={[1.33, 1, 1.33]}>
          <meshStandardMaterial
            {...(poolColor === "PoolColor_1" ? PoolColor_1 : PoolColor_2)}
          />
        </mesh>
        <mesh
          geometry={nodes.pool_edge_tile_5x8.geometry}
          scale={[1.3301, 1, 1.3301]}
        >
          <meshStandardMaterial
            {...(groundColor === "GroundColor_1"
              ? GroundColor_1
              : GroundColor_2)}
          />
        </mesh>
        <group position={[-1.95, 0.8, -2.46]} scale={[1.33, 1, 1.33]}>
          <mesh
            geometry={nodes.Cube012.geometry}
            material={materials.spotlight}
          />
          <mesh
            geometry={nodes.Cube012_1.geometry}
            material={materials["Stainless steel"]}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/models/PahlenPool.gltf");

export default PahlenPool;
